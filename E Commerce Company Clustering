import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import seaborn as sns

np.random.seed(42)
data = pd.DataFrame({
    'customer_id': range(1, 101),
    'purchase_history': np.random.randint(1, 100, 100),
    'browsing_behavior': np.random.randint(1, 100, 100),
    'age': np.random.randint(18, 70, 100),
    'annual_income': np.random.randint(20000, 150000, 100),
    'spending_score': np.random.randint(1, 100, 100)
})

print(data.isnull().sum())

data = data.drop('customer_id', axis=1)

scaler = StandardScaler()
data_scaled = scaler.fit_transform(data)

sse = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(data_scaled)
    sse.append(kmeans.inertia_)

plt.figure(figsize=(10, 6))
plt.plot(range(1, 11), sse, marker='o')
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('SSE')
plt.show()

kmeans = KMeans(n_clusters=4, random_state=42)
kmeans.fit(data_scaled)
data['cluster'] = kmeans.labels_

print(data['cluster'].value_counts())

plt.figure(figsize=(10, 6))
sns.scatterplot(x='annual_income', y='spending_score', hue='cluster', data=data, palette='viridis')
plt.title('Customer Segments based on Annual Income and Spending Score')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.legend()
plt.show()

sns.pairplot(data, hue='cluster', palette='viridis')
plt.show()
